install.packages("XLConnect")
library(XLConnect)
getwd()
chgwd()
getwd()
setwd()
setwd("~/Code/R/datasciencecoursera")
getwd()
install.packages("swirl")
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
install.packages(c("boot", "cluster", "codetools", "foreign", "knitr", "manipulate", "MASS", "Matrix", "mgcv", "nlme", "rmarkdown"))
library("swirl")
swirl()
5+7
x <- 5 + 7
x
y <- x -3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_sqrt
my_div
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
list.files(args())
args()
args(list.files)
old.dir <- getwd()
dir.create("testdir")
setwd()
setwd(old.dir+"/testdir")
new.dir <- old.dir+"/testdir"
new.dir <- paste(old.dir, "testdir", sep = "/")
setwd(new.dir)
getwd()
setwd("testdir")
setwd(..)
setwd(old.dir)
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
dir.create("testdir2")
dir.create("testdir2/testdir3", recursive = TRUE)
unlink("testdir2/")
unlink("testdir2/", recursive = TRUE)
unlink("testdir2", recursive = TRUE)
setwd(old.dir)
ls()
unlink("testdir", recursive = TRUE)
x <- c(4, TRUE)
class(x)
x <- c(1,3, 5)
x
y <- c(3, 2, 10)
z <- cbind(x,y)
z
x <- list(2, "a", "b", TRUE)
x[[1]]
x
class(x[[1]])
x <- 1:4
y <- 2
x + y
x <- c(3, 5, 1, 10, 12, 6)
x
x[x %in% 1:5] <- 0
x
data <- read.table("hw1_data.csv")
?read.csv
data <- read.csv("hw1_data.csv", header = TRUE)
data
which(is.na(data))
length(which(is.na(data)))
length(which(is.na(data#Ozone)))
;
length(which(is.na(data$Ozone)))
?mean
mean(data$Ozone, na.rm = TRUE)
nrow(data)
s <- 1500000*120*8
s / 2^20
s / 2^20 /2^10
source("calcRam.R")
calcRam(1500000,120,8)
?url
tail(data, n = 2)
head(data, n=2)
data[47]
data$Oz[47]
length(is.na(data$Oz))
length(is.na(data$Ozone))
length(is.na(data$Ozone))
data$Ozone
o <- data$Ozone
o[is.na()]
o[is.na(o)]
?length
length(o[is.na(o)])
x <- data$Ozone
y <- data$Temp
c(x > 31, y > 90)
names(data)
data.1[Temp, Month]
data.1 <- data[Temp, Month]
data.1 <- data[4:5]
data.1
data.1 <- data["Temp"]
data.1
data.1 <- data["Temp", "Month"]
data.1
data.1 <- data[,c("Temp", "Month")]
data.1
data.1["Month" == 5]
data.1
data.1[data.1$Month == 5]
data.1[data.1$Month == 5,]
subset(data, Ozone > 31 & Temp > 90, select = Solar.R)
mean(subset(data, Ozone > 31 & Temp > 90, select = Solar.R))
s <- subset(data, Ozone > 31 & Temp > 90, select = Solar.R)
s
mean(s)
?mean
is.numeric(s)
?numeric
as.numeric(s)
apply(s,2,mean)
apply(subset(data, Ozone > 31 & Temp > 90, select = Solar.R),2,mean)
apply(subset(data, Month == 6, select = Temp),2,mean)
apply(subset(data, Month == 5, select = Ozone),2,max)
?max
subset(data, Month == 5, select = Ozone)
s <- subset(data, Month == 5, select = Ozone)
max(s, na.rm = TRUE)
cube <- function(x, n) {
x^3
}
cube <- function(x, n) {
x^3
}
cube (2)
cube (2, 2)
cube (3)
x <- 1:10
x
x > 5
x[x > 5] <- 0
x
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
rm(x)
z <- 10
f(3)
x
ls()
rm(list = ls())
clear
clear()
install.packages("shiny")
install.packages("xlsx")
install.packages("tidyr")
install.packages("leaflet")
install.packages("htmlwidgets")
